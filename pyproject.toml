[tool.poetry]
name = "metrics-pipeline"
version = "1.2.3"
description = "Screening pipeline for metrics evaluation in Generative AI for materials"
authors = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pymatgen = ">=2023.10.11"
spglib = ">=2.0.0"
torch = "~2.3.0"
torch-cluster = {version = "^1.6.3+pt23cpu", source = "pytorch-geometric"}
torch-scatter = {version = "^2.1.2+pt23cpu", source = "pytorch-geometric"}
torch-geometric = "^2.3.0"
materials-toolkit = { git = "https://github.com/materials-toolkits/pymaterials.git", branch = "pre-release", rev="c777b3a" }
matminer = "^0.9.2"
mp-api = "^0.41.2"

[tool.poetry.scripts]
cif_counter = 'metrics_pipeline.cif_counter:main'
cif_to_poscar = 'metrics_pipeline.cif_to_poscar:main'
dataset_loader = 'metrics_pipeline.dataset_loader:main'
preprocess = 'metrics_pipeline.preprocess:main'
vasp_static_sun = 'metrics_pipeline.vasp_static_sun:main'
create_summary = 'metrics_pipeline.create_summary:main'
phase_diag_energies = 'metrics_pipeline.phase_diag_energies:main'
summary_paths_update = 'metrics_pipeline.summary_paths_update:main'
vasp_relax = 'metrics_pipeline.vasp_relax:main'
metrics = 'metrics_pipeline.metrics:main'
vasp_static_dsol = 'metrics_pipeline.vasp_static_dsol:main'
dsol_bandgap = 'metrics_pipeline.dsol_bandgap:main'

[[tool.poetry.source]]
name = "pytorch-geometric"
url = "https://data.pyg.org/whl/torch-2.3.0+cpu.html"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
